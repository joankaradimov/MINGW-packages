--- 000/setup.py	2019-07-26 16:58:54.240511800 +0300
+++ 001/setup.py	2019-07-26 16:55:23.769157000 +0300
@@ -969,23 +969,24 @@
         # need at this stage.
         if sys.version_info > (2, 7) and sys.version_info < (3, 3):
             # only stuff built with msvc9 needs this loader.
-            self._build_pycom_loader()
-        self._build_scintilla()
+            #self._build_pycom_loader()
+            pass
+        #self._build_scintilla()
         # Copy cpp lib files needed to create Python COM extensions
-        clib_files = (['win32', 'pywintypes%s.lib'],
-                      ['win32com', 'pythoncom%s.lib'],
-                      ['win32com', 'axscript%s.lib'])
-        for clib_file in clib_files:
-            target_dir = os.path.join(self.build_lib, clib_file[0], "libs")
-            if not os.path.exists(target_dir):
-                self.mkpath(target_dir)
-            suffix = ""
-            if self.debug:
-                suffix = "_d"
-            fname = clib_file[1] % suffix
-            self.copy_file(os.path.join(self.build_temp, fname),
-                           target_dir
-                           )
+        #clib_files = (['win32', 'pywintypes%s.lib'],
+        #              ['win32com', 'pythoncom%s.lib'],
+        #              ['win32com', 'axscript%s.lib'])
+        #for clib_file in clib_files:
+        #    target_dir = os.path.join(self.build_lib, clib_file[0], "libs")
+        #    if not os.path.exists(target_dir):
+        #        self.mkpath(target_dir)
+        #    suffix = ""
+        #    if self.debug:
+        #        suffix = "_d"
+        #    fname = clib_file[1] % suffix
+        #    self.copy_file(os.path.join(self.build_temp, fname),
+        #                   target_dir
+        #                   )
         # The MFC DLLs.
         target_dir = os.path.join(self.build_lib, "pythonwin")
 
@@ -1161,10 +1161,7 @@
         old_build_temp = self.build_temp
         want_static_crt = sys.version_info > (2,6) and ext.name in static_crt_modules
         if want_static_crt:
-            self.compiler.compile_options.remove('/MD')
-            self.compiler.compile_options.append('/MT')
-            self.compiler.compile_options_debug.remove('/MDd')
-            self.compiler.compile_options_debug.append('/MTd')
+            pass
 
         try:
             build_ext.build_extension(self, ext)
@@ -1199,10 +1198,7 @@
         finally:
             self.build_temp = old_build_temp
             if want_static_crt:
-                self.compiler.compile_options.remove('/MT')
-                self.compiler.compile_options.append('/MD')
-                self.compiler.compile_options_debug.remove('/MTd')
-                self.compiler.compile_options_debug.append('/MDd')
+                pass
 
     def get_ext_filename(self, name):
         # The pywintypes and pythoncom extensions have special names
@@ -2084,138 +2087,138 @@
 ]
 
 pythonwin_extensions = [
-    WinExt_pythonwin("win32ui",
-        sources = [
-            "Pythonwin/dbgthread.cpp",
-            "Pythonwin/dibapi.cpp",
-            "Pythonwin/dllmain.cpp",
-            "Pythonwin/pythondoc.cpp",
-            "Pythonwin/pythonppage.cpp",
-            "Pythonwin/pythonpsheet.cpp",
-            "Pythonwin/pythonRichEditCntr.cpp",
-            "Pythonwin/pythonRichEditDoc.cpp",
-            "Pythonwin/pythonview.cpp",
-            "Pythonwin/stdafx.cpp",
-            "Pythonwin/win32app.cpp",
-            "Pythonwin/win32assoc.cpp",
-            "Pythonwin/win32bitmap.cpp",
-            "Pythonwin/win32brush.cpp",
-            "Pythonwin/win32cmd.cpp",
-            "Pythonwin/win32cmdui.cpp",
-            "Pythonwin/win32context.cpp",
-            "Pythonwin/win32control.cpp",
-            "Pythonwin/win32ctledit.cpp",
-            "Pythonwin/win32ctrlList.cpp",
-            "Pythonwin/win32ctrlRichEdit.cpp",
-            "Pythonwin/win32ctrlTree.cpp",
-            "Pythonwin/win32dc.cpp",
-            "Pythonwin/win32dlg.cpp",
-            "Pythonwin/win32dlgbar.cpp",
-            "Pythonwin/win32dll.cpp",
-            "Pythonwin/win32doc.cpp",
-            "win32/src/win32dynamicdialog.cpp",
-            "Pythonwin/win32font.cpp",
-            "Pythonwin/win32gdi.cpp",
-            "Pythonwin/win32ImageList.cpp",
-            "Pythonwin/win32menu.cpp",
-            "Pythonwin/win32notify.cpp",
-            "Pythonwin/win32pen.cpp",
-            "Pythonwin/win32prinfo.cpp",
-            "Pythonwin/win32prop.cpp",
-            "Pythonwin/win32rgn.cpp",
-            "Pythonwin/win32RichEdit.cpp",
-            "Pythonwin/win32RichEditDocTemplate.cpp",
-            "Pythonwin/win32splitter.cpp",
-            "Pythonwin/win32template.cpp",
-            "Pythonwin/win32thread.cpp",
-            "Pythonwin/win32toolbar.cpp",
-            "Pythonwin/win32tooltip.cpp",
-            "Pythonwin/win32ui.rc",
-            "Pythonwin/win32uimodule.cpp",
-            "Pythonwin/win32util.cpp",
-            "Pythonwin/win32view.cpp",
-            "Pythonwin/win32virt.cpp",
-            "Pythonwin/win32win.cpp",
-            ],
-        extra_compile_args = ['-DBUILD_PYW'],
-        pch_header="stdafx.h", base_address=dll_base_address,
-        depends = [
-            "Pythonwin/stdafx.h",
-            "Pythonwin/win32uiExt.h",
-            "Pythonwin/dibapi.h",
-            "Pythonwin/pythoncbar.h",
-            "Pythonwin/pythondoc.h",
-            "Pythonwin/pythonframe.h",
-            "Pythonwin/pythonppage.h",
-            "Pythonwin/pythonpsheet.h",
-            "Pythonwin/pythonRichEdit.h",
-            "Pythonwin/pythonRichEditCntr.h",
-            "Pythonwin/pythonRichEditDoc.h",
-            "Pythonwin/pythonview.h",
-            "Pythonwin/pythonwin.h",
-            "Pythonwin/Win32app.h",
-            "Pythonwin/win32assoc.h",
-            "Pythonwin/win32bitmap.h",
-            "Pythonwin/win32brush.h",
-            "Pythonwin/win32cmd.h",
-            "Pythonwin/win32cmdui.h",
-            "Pythonwin/win32control.h",
-            "Pythonwin/win32ctrlList.h",
-            "Pythonwin/win32ctrlTree.h",
-            "Pythonwin/win32dc.h",
-            "Pythonwin/win32dlg.h",
-            "Pythonwin/win32dlgbar.h",
-            "win32/src/win32dynamicdialog.h",
-            "Pythonwin/win32dll.h",
-            "Pythonwin/win32doc.h",
-            "Pythonwin/win32font.h",
-            "Pythonwin/win32gdi.h",
-            "Pythonwin/win32hl.h",
-            "Pythonwin/win32ImageList.h",
-            "Pythonwin/win32menu.h",
-            "Pythonwin/win32pen.h",
-            "Pythonwin/win32prinfo.h",
-            "Pythonwin/win32prop.h",
-            "Pythonwin/win32rgn.h",
-            "Pythonwin/win32RichEdit.h",
-            "Pythonwin/win32RichEditDocTemplate.h",
-            "Pythonwin/win32splitter.h",
-            "Pythonwin/win32template.h",
-            "Pythonwin/win32toolbar.h",
-            "Pythonwin/win32ui.h",
-            "Pythonwin/Win32uiHostGlue.h",
-            "Pythonwin/win32win.h",
-            ],
-        optional_headers=['afxres.h']),
-    WinExt_pythonwin("win32uiole",
-        sources = [
-            "Pythonwin/stdafxole.cpp",
-            "Pythonwin/win32oleDlgInsert.cpp",
-            "Pythonwin/win32oleDlgs.cpp",
-            "Pythonwin/win32uiole.cpp",
-            "Pythonwin/win32uioleClientItem.cpp",
-            "Pythonwin/win32uioledoc.cpp",
-            ],
-        depends = [
-            "Pythonwin/stdafxole.h",
-            "Pythonwin/win32oleDlgs.h",
-            "Pythonwin/win32uioledoc.h",
-            ],
-        pch_header="stdafxole.h",
-        windows_h_version = 0x500,
-        optional_headers=['afxres.h']),
-    WinExt_pythonwin("dde",
-        sources = [
-            "Pythonwin/stddde.cpp",
-            "Pythonwin/ddetopic.cpp",
-            "Pythonwin/ddeconv.cpp",
-            "Pythonwin/ddeitem.cpp",
-            "Pythonwin/ddemodule.cpp",
-            "Pythonwin/ddeserver.cpp",
-            ],
-        pch_header="stdafxdde.h",
-        depends=["win32/src/stddde.h", "pythonwin/ddemodule.h"],
-        optional_headers=['afxres.h']),
+    #WinExt_pythonwin("win32ui",
+    #    sources = [
+    #        "Pythonwin/dbgthread.cpp",
+    #        "Pythonwin/dibapi.cpp",
+    #        "Pythonwin/dllmain.cpp",
+    #        "Pythonwin/pythondoc.cpp",
+    #        "Pythonwin/pythonppage.cpp",
+    #        "Pythonwin/pythonpsheet.cpp",
+    #        "Pythonwin/pythonRichEditCntr.cpp",
+    #        "Pythonwin/pythonRichEditDoc.cpp",
+    #        "Pythonwin/pythonview.cpp",
+    #        "Pythonwin/stdafx.cpp",
+    #        "Pythonwin/win32app.cpp",
+    #        "Pythonwin/win32assoc.cpp",
+    #        "Pythonwin/win32bitmap.cpp",
+    #        "Pythonwin/win32brush.cpp",
+    #        "Pythonwin/win32cmd.cpp",
+    #        "Pythonwin/win32cmdui.cpp",
+    #        "Pythonwin/win32context.cpp",
+    #        "Pythonwin/win32control.cpp",
+    #        "Pythonwin/win32ctledit.cpp",
+    #        "Pythonwin/win32ctrlList.cpp",
+    #        "Pythonwin/win32ctrlRichEdit.cpp",
+    #        "Pythonwin/win32ctrlTree.cpp",
+    #        "Pythonwin/win32dc.cpp",
+    #        "Pythonwin/win32dlg.cpp",
+    #        "Pythonwin/win32dlgbar.cpp",
+    #        "Pythonwin/win32dll.cpp",
+    #        "Pythonwin/win32doc.cpp",
+    #        "win32/src/win32dynamicdialog.cpp",
+    #        "Pythonwin/win32font.cpp",
+    #        "Pythonwin/win32gdi.cpp",
+    #        "Pythonwin/win32ImageList.cpp",
+    #        "Pythonwin/win32menu.cpp",
+    #        "Pythonwin/win32notify.cpp",
+    #        "Pythonwin/win32pen.cpp",
+    #        "Pythonwin/win32prinfo.cpp",
+    #        "Pythonwin/win32prop.cpp",
+    #        "Pythonwin/win32rgn.cpp",
+    #        "Pythonwin/win32RichEdit.cpp",
+    #        "Pythonwin/win32RichEditDocTemplate.cpp",
+    #        "Pythonwin/win32splitter.cpp",
+    #        "Pythonwin/win32template.cpp",
+    #        "Pythonwin/win32thread.cpp",
+    #        "Pythonwin/win32toolbar.cpp",
+    #        "Pythonwin/win32tooltip.cpp",
+    #        "Pythonwin/win32ui.rc",
+    #        "Pythonwin/win32uimodule.cpp",
+    #        "Pythonwin/win32util.cpp",
+    #        "Pythonwin/win32view.cpp",
+    #        "Pythonwin/win32virt.cpp",
+    #        "Pythonwin/win32win.cpp",
+    #        ],
+    #    extra_compile_args = ['-DBUILD_PYW'],
+    #    pch_header="stdafx.h", base_address=dll_base_address,
+    #    depends = [
+    #        "Pythonwin/stdafx.h",
+    #        "Pythonwin/win32uiExt.h",
+    #        "Pythonwin/dibapi.h",
+    #        "Pythonwin/pythoncbar.h",
+    #        "Pythonwin/pythondoc.h",
+    #        "Pythonwin/pythonframe.h",
+    #        "Pythonwin/pythonppage.h",
+    #        "Pythonwin/pythonpsheet.h",
+    #        "Pythonwin/pythonRichEdit.h",
+    #        "Pythonwin/pythonRichEditCntr.h",
+    #        "Pythonwin/pythonRichEditDoc.h",
+    #        "Pythonwin/pythonview.h",
+    #        "Pythonwin/pythonwin.h",
+    #        "Pythonwin/Win32app.h",
+    #        "Pythonwin/win32assoc.h",
+    #        "Pythonwin/win32bitmap.h",
+    #        "Pythonwin/win32brush.h",
+    #        "Pythonwin/win32cmd.h",
+    #        "Pythonwin/win32cmdui.h",
+    #        "Pythonwin/win32control.h",
+    #        "Pythonwin/win32ctrlList.h",
+    #        "Pythonwin/win32ctrlTree.h",
+    #        "Pythonwin/win32dc.h",
+    #        "Pythonwin/win32dlg.h",
+    #        "Pythonwin/win32dlgbar.h",
+    #        "win32/src/win32dynamicdialog.h",
+    #        "Pythonwin/win32dll.h",
+    #        "Pythonwin/win32doc.h",
+    #        "Pythonwin/win32font.h",
+    #        "Pythonwin/win32gdi.h",
+    #        "Pythonwin/win32hl.h",
+    #        "Pythonwin/win32ImageList.h",
+    #        "Pythonwin/win32menu.h",
+    #        "Pythonwin/win32pen.h",
+    #        "Pythonwin/win32prinfo.h",
+    #        "Pythonwin/win32prop.h",
+    #        "Pythonwin/win32rgn.h",
+    #        "Pythonwin/win32RichEdit.h",
+    #        "Pythonwin/win32RichEditDocTemplate.h",
+    #        "Pythonwin/win32splitter.h",
+    #        "Pythonwin/win32template.h",
+    #        "Pythonwin/win32toolbar.h",
+    #        "Pythonwin/win32ui.h",
+    #        "Pythonwin/Win32uiHostGlue.h",
+    #        "Pythonwin/win32win.h",
+    #        ],
+    #    optional_headers=['afxres.h']),
+    #WinExt_pythonwin("win32uiole",
+    #    sources = [
+    #        "Pythonwin/stdafxole.cpp",
+    #        "Pythonwin/win32oleDlgInsert.cpp",
+    #        "Pythonwin/win32oleDlgs.cpp",
+    #        "Pythonwin/win32uiole.cpp",
+    #        "Pythonwin/win32uioleClientItem.cpp",
+    #        "Pythonwin/win32uioledoc.cpp",
+    #        ],
+    #    depends = [
+    #        "Pythonwin/stdafxole.h",
+    #        "Pythonwin/win32oleDlgs.h",
+    #        "Pythonwin/win32uioledoc.h",
+    #        ],
+    #    pch_header="stdafxole.h",
+    #    windows_h_version = 0x500,
+    #    optional_headers=['afxres.h']),
+    #WinExt_pythonwin("dde",
+    #    sources = [
+    #        "Pythonwin/stddde.cpp",
+    #        "Pythonwin/ddetopic.cpp",
+    #        "Pythonwin/ddeconv.cpp",
+    #        "Pythonwin/ddeitem.cpp",
+    #        "Pythonwin/ddemodule.cpp",
+    #        "Pythonwin/ddeserver.cpp",
+    #        ],
+    #    pch_header="stdafxdde.h",
+    #    depends=["win32/src/stddde.h", "pythonwin/ddemodule.h"],
+    #    optional_headers=['afxres.h']),
     ]
 # win32ui is large, so we reserve more bytes than normal
 dll_base_address += 0x100000
@@ -2255,13 +2258,13 @@
                   "PythonService.cpp PythonService.rc".split()],
          unicode_mode = True,
          libraries = "user32 advapi32 ole32 shell32 pywintypes"),
-    WinExt_pythonwin_subsys_win("Pythonwin",
-        sources = [
-            "Pythonwin/pythonwin.cpp",
-            "Pythonwin/pythonwin.rc",
-            "Pythonwin/stdafxpw.cpp",
-            ],
-        optional_headers=['afxres.h']),
+    #WinExt_pythonwin_subsys_win("Pythonwin",
+    #    sources = [
+    #        "Pythonwin/pythonwin.cpp",
+    #        "Pythonwin/pythonwin.rc",
+    #        "Pythonwin/stdafxpw.cpp",
+    #        ],
+    #    optional_headers=['afxres.h']),
 ]
 
 # Special definitions for SWIG.
--- 000/com/win32com/src/include/PythonCOM.h	2019-07-29 10:03:46.000000000 +0300
+++ 001/com/win32com/src/include/PythonCOM.h	2019-07-29 22:37:36.781922400 +0300
@@ -110,6 +110,7 @@
 
 #ifdef __MINGW32__
 // Special Mingw32 considerations.
+#define NO_PYCOM_IDISPATCHEX
 #define NO_PYCOM_ENUMSTATPROPSTG
 #define __try try
 #define __except catch
